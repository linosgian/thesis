input {
	beats {
		port => 5044    
	}
}
filter {
	mutate {
		# TODO: Remove hardcoded district and add an environment variable.
		add_field => [ "district", "netmode" ]
	}
	if [type] == "webserver" {
		grok {
			patterns_dir => ["/opt/logstash/patterns"]
			match => {"message" => ["%{NGINXACCESS}"]}
			add_tag => "NGINXACCESS"
		}

	}
	if [type] == "auth"{
		if "invalid user" in [message]{
			mutate{ add_tag => "SSHINVALIDUSER" }
		}else{
			mutate {add_tag => "SSHFAILEDLOGIN" }
		}
		grok {
			patterns_dir => ["/opt/logstash/patterns"]
			match => {"message" => ["%{SSHFAILEDLOGIN}", "%{SSHINVALIDUSER}"]}
			add_tag => "SSHPARSER"
		}
	}
	# TODO: Depend on service and not type
	if [type] == "mail"{
		grok {
			patterns_dir => ["/opt/logstash/patterns"]
			match => {"message" => ["%{DOVECOTFAILED}"]}
			add_tag => "DOVECOTFAILED"
		}
	}
}

output {
#	if [type] == "mail"{
#		stdout { codec => rubydebug }
#	}

	if "_grokparsefailure" in [tags]{
		stdout { codec => rubydebug }
	}else{

		elasticsearch{
			template_overwrite => true
			template => "/etc/logstash/elasticsearch-template.json"
			index => "%{district}-logstash-%{+YYYY.MM.dd}"
			hosts => ["localhost:9200"]
		}
	}
}
